name: Update Confluent infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/confluent/**'
      - '.github/workflows/main-infra-confluent.yml'
      - '.github/actions/terraform/action.yml'

jobs:
  sonar:
    name: Run SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Run SonarCloud analysis
        uses: sonarsource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./infrastructure/confluent
          args: >
            -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY_INFRA }}
            -Dsonar.host.url=${{ vars.SONAR_HOST_URL }}
  update-kafka:
    name: Update Kafka infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set-up staging environment
        uses: ./.github/actions/terraform
        with:
          provider: confluent
          resource: environment
          token: ${{ secrets.TF_API_TOKEN }}
          organization: ${{ vars.TF_CLOUD_ORGANIZATION }}
          workspace-prefix: ${{ vars.TF_WORKSPACE_PREFIX }}
      - name: Set-up Kafka cluster
        uses: ./.github/actions/terraform
        with:
          provider: confluent
          resource: cluster
          token: ${{ secrets.TF_API_TOKEN }}
          organization: ${{ vars.TF_CLOUD_ORGANIZATION }}
          workspace-prefix: ${{ vars.TF_WORKSPACE_PREFIX }}
      - name: Copy Avro schemas to schema-registry folder
        run: cp ./code/src/main/avro/*.avsc ./infrastructure/confluent/schema-registry
      - name: Set-up Schema Registry
        uses: ./.github/actions/terraform
        with:
          provider: confluent
          resource: schema-registry
          token: ${{ secrets.TF_API_TOKEN }}
          organization: ${{ vars.TF_CLOUD_ORGANIZATION }}
          workspace-prefix: ${{ vars.TF_WORKSPACE_PREFIX }}
