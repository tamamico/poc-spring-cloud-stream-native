name: Build Code

on:
  push:
    branches:
      - main
    paths:
      - code/**
      - .github/**
  pull_request:
    types: [ opened, synchronize, reopened ]
    paths:
      - code/**
      - .github/**

defaults:
  run:
    working-directory: ./code

permissions:
  pull-requests: read
  contents: read
  security-events: write

jobs:
  build:
    name: Build code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set-up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Build & Test
        run: ./mvnw -B clean verify
      - name: Run SonarCloud analysis
        run: ./mvnw -B sonar:sonar -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Run Snyk analysis in source code
        run: ./mvnw -B snyk:test -DapiToken=${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
      - name: Upload source code analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: /home/runner/work/poc-spring-cloud-stream-native/poc-spring-cloud-stream-native/code/code.sarif
          category: source-code
      - name: Build Docker native image
        run: ./mvnw -B spring-boot:build-image -Pnative
      - name: Get Maven artifact version
        id: get-artifact-version
        run: echo value=$(./mvnw -B help:evaluate -Dexpression=project.version -q -DforceStdout) >> $GITHUB_OUTPUT
      - name: Run Snyk analysis in Docker image
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ecristobalr/poc-scs-native:${{ steps.get-artifact-version.outputs.value }}
          args: --sarif-file-output=docker.sarif
      - name: Upload Docker image analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: docker.sarif
          category: docker
      - name: Deploy Docker native image
        run: docker push ecristobalr/poc-scs-native:${{ steps.get-artifact-version.outputs.value }}
