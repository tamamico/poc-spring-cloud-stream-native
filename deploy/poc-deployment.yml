apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-deployment
  namespace: poc
  labels:
    app: poc-scs-native
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poc-scs-native
  template:
    metadata:
      labels:
        app: poc-scs-native
    spec:
      serviceAccountName: poc-user
      containers:
        - name: poc-scs-native
          image: ghcr.io/tamamico/poc-scs-native:0.1.0-SNAPSHOT
          imagePullPolicy: Always
          resources:
            requests:
              memory: "1G"
              cpu: "500m"
              ephemeral-storage: "512M"
            limits:
              memory: "2G"
              cpu: "1"
              ephemeral-storage: "1G"
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: 8080
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 8080
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: poc-user
  namespace: poc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: poc-role
  namespace: poc
rules:
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: poc-role-binding
  namespace: poc
subjects:
  - kind: ServiceAccount
    name: poc-user
    namespace: poc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: poc-role
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all-egress
spec:
  podSelector: {}
  egress:
  - {}
  policyTypes:
  - Egress

