logging.level.root=info
logging.level.org.apache=warn
logging.level.io.confluent=warn
management.endpoint.health.probes.enabled=true
management.server.port=8080
management.tracing.sampling.probability=1
spring.application.group=poc
spring.application.name=scs-kafka-reactive
spring.cloud.stream.bindings.greet-in-0.group=${spring.application.name}
spring.cloud.stream.bindings.greet-in-0.destination=input.men.avro,input.women.avro
spring.cloud.stream.bindings.greet-in-0.consumer.use-native-decoding=true
spring.cloud.stream.bindings.greet-out-0.destination=output.avro
spring.cloud.stream.bindings.greet-out-0.producer.use-native-encoding=true
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.consumer-properties.specific.avro.reader=true
spring.cloud.stream.kafka.binder.consumer-properties.basic.auth.credentials.source=USER_INFO
spring.cloud.stream.kafka.binder.consumer-properties.basic.auth.user.info=${schema-registry.user}:${schema-registry.password}
spring.cloud.stream.kafka.binder.consumer-properties.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.value.subject.name.strategy=io.confluent.kafka.serializers.subject.RecordNameStrategy
spring.cloud.stream.kafka.binder.producer-properties.auto.register.schemas=false
spring.cloud.stream.kafka.binder.producer-properties.basic.auth.credentials.source=USER_INFO
spring.cloud.stream.kafka.binder.producer-properties.basic.auth.user.info=${schema-registry.user}:${schema-registry.password}
spring.cloud.stream.kafka.binder.producer-properties.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.binder.producer-properties.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.cloud.stream.kafka.binder.producer-properties.value.subject.name.strategy=io.confluent.kafka.serializers.subject.RecordNameStrategy
spring.cloud.stream.kafka.binder.configuration.metadata.max.age.ms=1000
spring.cloud.stream.kafka.binder.configuration.security.protocol=SASL_SSL
spring.cloud.stream.kafka.binder.configuration.sasl.mechanism=PLAIN
spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=\
  ${kafka.login.module:org.apache.kafka.common.security.plain.PlainLoginModule} \
  required username='${kafka.user}' password='${kafka.password}';
spring.cloud.stream.kafka.binder.enable-observation=true
spring.cloud.stream.kafka.bindings.greet-in-0.consumer.standard-headers=both
spring.cloud.stream.kafka.bindings.greet-in-0.consumer.start-offset=latest
#---
spring.config.activate.on-cloud-platform=kubernetes
spring.config.import=configtree:/etc/config/*/,configtree:/etc/secrets/*/
spring.reactor.context-propagation=auto
logging.structured.json.rename.traceId=trace.id
logging.structured.json.rename.spanId=span.id
logging.structured.json.exclude=trace_id,span_id
logging.structured.format.console=ecs
otel.instrumentation.micrometer.enabled=true
otel.exporter.otlp.endpoint=https://otlp.eu01.nr-data.net
