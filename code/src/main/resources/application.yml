management:
  server:
    port: 8080
  endpoint:
    health:
      probes:
        enabled: true
  tracing:
    sampling:
      probability: 1.0

logging:
  level:
    root: info
    org.apache: warn
    io.confluent: warn

spring:
  application:
    name: poc-scs-native
  cloud:
    stream:
      bindings:
        greet-in-0:
          group: ${spring.application.name}
          destination: input.men.avro,input.women.avro
          consumer:
            use-native-decoding: true
        greet-out-0:
          destination: output.avro
          producer:
            use-native-encoding: true
      kafka:
        binder:
          auto-create-topics: false
          consumer-properties:
            specific.avro.reader: true
            basic.auth.credentials.source: USER_INFO
            basic.auth.user.info: ${schema-registry.user}:${schema-registry.password}
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            value.subject.name.strategy: io.confluent.kafka.serializers.subject.RecordNameStrategy
          producer-properties:
            auto.register.schemas: false
            basic.auth.credentials.source: USER_INFO
            basic.auth.user.info: ${schema-registry.user}:${schema-registry.password}
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            value.subject.name.strategy: io.confluent.kafka.serializers.subject.RecordNameStrategy
          configuration:
            metadata.max.age.ms: 1000
            security.protocol: SASL_SSL
            sasl.mechanism: PLAIN
            sasl.jaas.config: >
              ${kafka.login.module:org.apache.kafka.common.security.plain.PlainLoginModule}
              required username='${kafka.user}' password='${kafka.password}';
        bindings:
          greet-in-0:
            consumer:
              reactive-auto-commit: true
              standard-headers: both
              start-offset: latest
---
spring:
  config:
    activate:
      on-cloud-platform: kubernetes
    import: "configtree:/etc/config/*/,configtree:/etc/secrets/*/"
logging:
  structured:
    format:
      console: ecs
